<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- We still need it for loading the CXFServlet -->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    
    <context:component-scan base-package="work"/>
   
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:environment.properties</value>
        </property>
    </bean>
    <bean id="workroute" class="work.route.WorkRoute"/> 
    <bean id="emailroute" class="work.route.WorkRouteSendEmail"/>
    <bean id="workRouteHouse" class="work.route.WorkRouteHouse"/>

    <camelContext xmlns="http://camel.apache.org/schema/spring" id="camel">
        <routeBuilder ref="workroute"/>
        <routeBuilder ref="emailroute"/>
        <routeBuilder ref="workRouteHouse"/>
    </camelContext>

    <cxf:cxfEndpoint id="kundeService"
                     address="${endpoint.party}"
                     serviceClass="org.tempuri.getDataUsingDataContract"
                     loggingFeatureEnabled="true"/>

   
    <bean name="logFormatter" class="common.log.WebshopLogFormatter"/>
    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
          p:cacheManager-ref="ehcache"/>
    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          p:configLocation="classpath:ehcache.xml"/>
  
    <!-- this is the JDBC data source for Oracle 
    class="oracle.jdbc.pool.OracleDataSource" destroy-method="close" lazy-init="true"
    -->
    <!--
          <bean id="F2ORAdataSource" 
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@${db.F2ORA.host}" />
        <property name="username" value="${db.F2ORA.username}" />
        <property name="password" value="${db.F2ORA.password}" />
    </bean>
    -->    
    <bean id="F2ORAdataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
        <property name="url" value="jdbc:oracle:thin:@${db.F2ORA.host}" />
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />
        <property name="username" value="${db.F2ORA.username}" />
        <property name="password" value="${db.F2ORA.password}" />
        <property name="removeAbandoned" value="true"/>
        <property name="initialSize" value="20" />
        <property name="maxActive" value="30" />
    </bean>
        
    <!-- configure the Camel SQL component to use the JDBC data source -->
    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="F2ORAdataSource"/>
    </bean>

       
</beans>